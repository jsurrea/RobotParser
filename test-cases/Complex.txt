ROBOT_R
VARS a,b,c
PROCS
procedimiento [|p,d| 
assignTo: 5, a;
goto: 3,2;
goto: 3,a;
goto: a,2;
goto: a,a;
move: 3;
move: a;
turn: left;
turn: right;
turn: around;
face: north;
face: south;
face: west;
face: east;
put: 5, Balloons;
put: 2, Chips;
put: p, Balloons;
put: d, Chips;
pick: 2, Balloons;
pick: 2, Chips;
pick: a, Balloons;
pick: a, Chips;
moveToThe: 3, front;
moveToThe: 3, right;
moveToThe: 3, left;
moveToThe: 3, back;
moveToThe: a, front;
moveToThe: p, right;
moveToThe: d, left;
moveToThe: a, back;
moveInDir: 3, north;
moveInDir: 3, south;
moveInDir: 3, west;
moveInDir: 3, east;
moveInDir: a, north;
moveInDir: p, south;
moveInDir: d, west;
moveInDir: a, east;
jumpToThe: 3, front;
jumpToThe: 3, right;
jumpToThe: 3, left;
jumpToThe: 3, back;
jumpToThe: a, front;
jumpToThe: d, right;
jumpToThe: p, left;
jumpToThe: a, back;
jumpInDir: 4, north;
jumpInDir: 4, south;
jumpInDir: 4, west;
jumpInDir: 4, east;
jumpInDir: a, north;
jumpInDir: p, south;
jumpInDir: d, west;
jumpInDir: a, east;
procedimiento:5,2;
if: facing: north then: [goto: 3,a] else: [goto: 3,a];
if: facing: south then: [goto: 3,a] else: [goto: 3,a];
if: facing: east then: [goto: 3,a] else: [goto: 3,a];
if: facing: west then: [goto: 3,a] else: [goto: 3,a];
if: canPut: 5, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPut: 5, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPut: a, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: p, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPick: 5, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: 5, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPick: a, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: p, balloons then: [goto: 3,a] else: [goto: 3,a];
while: canMoveInDir: 4, north do: [goto: 3,a];
while: canMoveInDir: 4, south do: [goto: 3,a];
while: canMoveInDir: 4, west do: [goto: 3,a];
while: canMoveInDir: 4, east do: [goto: 3,a];
while: canJumpInDir: 4, north do: [goto: 3,a];
while: canJumpInDir: 4, south do: [goto: 3,a];
while: canJumpInDir: 4, west do: [goto: 3,a];
while: canJumpInDir: 4, east do: [goto: 3,a];
while: canMoveToThe: 3, front do: [goto: 3,a];
while: canMoveToThe: 3, right do: [goto: 3,a];
while: canMoveToThe: 3, left do: [goto: 3,a];
while: canMoveToThe: 3, back do: [goto: 3,a];
while: canJumpToThe: 3, front do: [goto: 3,a];
while: canJumpToThe: 3, right do: [goto: 3,a];
while: canJumpToThe: 3, left do: [goto: 3,a];
while: canJumpToThe: 3, back do: [goto: 3,a];
while: not: canJumpToThe: 3, back do: [goto: 3,a];
repeat: 4 [goto: 3,a];
repeat: a [goto: 3,a];
nop:
]
procedimiento2 [||
assignTo: 5, a;
goto: 3,2;
goto: 3,a;
goto: a,2;
goto: a,a;
move: 3;
move: a;
turn: left;
turn: right;
turn: around;
face: north;
face: south;
face: west;
face: east;
put: 5, Balloons;
put: 2, Chips;
put: a, Balloons;
put: a, Chips;
pick: 2, Balloons;
pick: 2, Chips;
pick: a, Balloons;
pick: a, Chips;
moveToThe: 3, front;
moveToThe: 3, right;
moveToThe: 3, left;
moveToThe: 3, back;
moveToThe: a, front;
moveToThe: a, right;
moveToThe: a, left;
moveToThe: a, back;
moveInDir: 3, north;
moveInDir: 3, south;
moveInDir: 3, west;
moveInDir: 3, east;
moveInDir: a, north;
moveInDir: a, south;
moveInDir: a, west;
moveInDir: a, east;
jumpToThe: 3, front;
jumpToThe: 3, right;
jumpToThe: 3, left;
jumpToThe: 3, back;
jumpToThe: a, front;
jumpToThe: a, right;
jumpToThe: a, left;
jumpToThe: a, back;
jumpInDir: 4, north;
jumpInDir: 4, south;
jumpInDir: 4, west;
jumpInDir: 4, east;
jumpInDir: a, north;
jumpInDir: a, south;
jumpInDir: a, west;
jumpInDir: a, east;
if: facing: north then: [goto: 3,a] else: [goto: 3,a];
nop: 
]
[
assignTo: 5, a;
goto: 3,2;
goto: 3,a;
goto: a,2;
goto: a,a;
move: 3;
move: a;
turn: left;
turn: right;
turn: around;
face: north;
face: south;
face: west;
face: east;
put: 5, Balloons;
put: 2, Chips;
put: a, Balloons;
put: a, Chips;
pick: 2, Balloons;
pick: 2, Chips;
pick: a, Balloons;
pick: a, Chips;
moveToThe: 3, front;
moveToThe: 3, right;
moveToThe: 3, left;
moveToThe: 3, back;
moveToThe: a, front;
moveToThe: a, right;
moveToThe: a, left;
moveToThe: a, back;
moveInDir: 3, north;
moveInDir: 3, south;
moveInDir: 3, west;
moveInDir: 3, east;
moveInDir: a, north;
moveInDir: a, south;
moveInDir: a, west;
moveInDir: a, east;
jumpToThe: 3, front;
jumpToThe: 3, right;
jumpToThe: 3, left;
jumpToThe: 3, back;
jumpToThe: a, front;
jumpToThe: a, right;
jumpToThe: a, left;
jumpToThe: a, back;
jumpInDir: 4, north;
jumpInDir: 4, south;
jumpInDir: 4, west;
jumpInDir: 4, east;
jumpInDir: a, north;
jumpInDir: a, south;
jumpInDir: a, west;
jumpInDir: a, east;
nop:;
if: facing: north then: [goto: 3,a] else: [if: facing: north then: [goto: 3,a] else: [goto: 3,a]];
if: facing: south then: [goto: 3,a] else: [goto: 3,a];
if: facing: east then: [goto: 3,a] else: [goto: 3,a];
if: facing: west then: [goto: 3,a] else: [goto: 3,a];
if: canPut: 5, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPut: 5, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPut: a, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: a, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPick: 5, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: 5, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPick: a, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: a, balloons then: [goto: 3,a] else: [goto: 3,a];
while: canMoveInDir: 4, north do: [goto: 3,a];
while: canMoveInDir: 4, south do: [goto: 3,a];
while: canMoveInDir: 4, west do: [goto: 3,a];
while: canMoveInDir: 4, east do: [goto: 3,a];
while: canJumpInDir: 4, north do: [goto: 3,a];
while: canJumpInDir: 4, south do: [goto: 3,a];
while: canJumpInDir: 4, west do: [goto: 3,a];
while: canJumpInDir: 4, east do: [goto: 3,a];
while: canMoveToThe: 3, front do: [goto: 3,a];
while: canMoveToThe: 3, right do: [goto: 3,a];
while: canMoveToThe: 3, left do: [goto: 3,a];
while: canMoveToThe: 3, back do: [goto: 3,a];
while: canJumpToThe: 3, front do: [goto: 3,a];
while: canJumpToThe: 3, right do: [goto: 3,a];
while: canJumpToThe: 3, left do: [goto: 3,a];
while: canJumpToThe: 3, back do: [goto: 3,a];
while: not: canJumpToThe: 3, back do: [goto: 3,a];
repeat: 4 [goto: 3,a];
repeat: a [goto: 3,a];
if: facing: south then: [goto: 3,a] else: [goto: 3,a];
if: facing: east then: [goto: 3,a] else: [goto: 3,a];
if: facing: west then: [goto: 3,a] else: [goto: 3,a];
if: canPut: 5, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPut: 5, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPut: a, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: a, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPick: 5, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: 5, balloons then: [goto: 3,a] else: [goto: 3,a];
if: canPick: a, chips then: [goto: 3,a] else: [goto: 3,a];
if: canPick: a, balloons then: [goto: 3,a] else: [goto: 3,a];
while: canMoveInDir: 4, north do: [goto: 3,a];
while: canMoveInDir: 4, south do: [goto: 3,a];
while: canMoveInDir: 4, west do: [goto: 3,a];
while: canMoveInDir: 4, east do: [goto: 3,a];
while: canJumpInDir: 4, north do: [goto: 3,a];
while: canJumpInDir: 4, south do: [goto: 3,a];
while: canJumpInDir: 4, west do: [goto: 3,a];
while: canJumpInDir: 4, east do: [goto: 3,a];
while: canMoveToThe: 3, front do: [goto: 3,a];
while: canMoveToThe: 3, right do: [goto: 3,a];
while: canMoveToThe: 3, left do: [goto: 3,a];
while: canMoveToThe: 3, back do: [goto: 3,a];
while: canJumpToThe: 3, front do: [goto: 3,a];
while: canJumpToThe: 3, right do: [goto: 3,a];
while: canJumpToThe: 3, left do: [goto: 3,a];
while: canJumpToThe: 3, back do: [goto: 3,a];
while: not: canJumpToThe: 3, back do: [goto: 3,a];
repeat: 4 [goto: 3,a];
repeat: a [goto: 3,a];
nop:
]